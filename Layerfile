FROM vm/ubuntu:18.04

RUN apt-get update && \
    apt-get install apt-transport-https ca-certificates curl software-properties-common && \
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable" && \
    apt-get update && \
    apt install docker-ce

RUN curl -fSsL https://deb.nodesource.com/setup_12.x | bash && \
    curl -fSsL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list && \
    apt-get update && \
    apt-get install nodejs yarn \
    git-core zlib1g-dev build-essential libssl-dev libpq-dev \
    libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev \
    libcurl4-openssl-dev software-properties-common libffi-dev

RUN git clone https://github.com/rbenv/rbenv.git ~/.rbenv
ENV PATH=$HOME/.rbenv/bin:$PATH
RUN echo 'eval "$(rbenv init -)"' >> ~/.bashrc

RUN git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build
RUN echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bashrc

RUN rbenv install 2.7.1
ENV PATH=$HOME/.rbenv/versions/2.7.1/bin:$PATH
ENV RAILS_ENV=production
ENV RAILS_MASTER_KEY=e99e4be8f41d43aea8d9ff4b1a5a4d83
RUN gem install bundler

MEMORY 2G
ENV NODE_OPTIONS=--max-old-space-size=8192

COPY / .

RUN REPEATABLE bash fast-git-clone.sh dalizard/todo-api.git /backend origin/master && \
    ( pkill --full --exact "node /usr/share/yarn/bin/yarn.js start --host 0.0.0.0" || true; ) && \
    if [ "$BRANCH" = staging ]; then \
      export BACKEND_API_ENDPOINT=https://prod-staging.example.com/api; \
    else \
      export BACKEND_API_ENDPOINT=https://$EXPOSE_WEBSITE_URL/api; \
    fi && \
    ( yarn install && PORT=3001 nohup yarn start --host 0.0.0.0& sleep 2; ) && \
    cd /backend && \
    ( docker rm -f $(docker ps -aq) || true; ) && \
    docker run -d -p 4793:4793 redis:latest && \
    docker run --name postgres -e POSTGRES_USER=shogun -e POSTGRES_PASSWORD=password -e POSTGRES_DB=todo-api -e POSTGRES_INITDB_ARGS="-A md5" -p 5432 -d postgres:12 && \
    sed -i '/postgres/d' /etc/hosts && \
    echo $(docker inspect --format='{{.NetworkSettings.IPAddress}}' postgres) postgres >> /etc/hosts && \
    echo -e 'production:\n\
  adapter: postgresql\n\
  host: postgres\n\
  encoder: unicode\n\
  database: todo-api\n\
  username: shogun\n\
  password: password\n' > config/database.yml && \
    bundle install && \
    bundle exec rake db:setup db:migrate db:seed && \
    ( bundle exec rails server --binding 0.0.0.0& sleep 2; )


EXPOSE WEBSITE localhost:3001
EXPOSE WEBSITE localhost:3000 /api
